apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: docker-registry-ui
  namespace: docker-registry-ui
spec:
  parentRefs:
    - name: infra-gateway
      namespace: istio-system
  hostnames:
    - docker.${APPLICATIONS.GLOBAL.BASE_URL}
  rules:
    - backendRefs:
       - kind: Service	
         name: docker-registry-ui-service
         port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-ui-service
  namespace: docker-registry-ui
spec:
  selector:
    app.kubernetes.io/name: docker-registry-ui
    app.kubernetes.io/version: "1.0"
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry-ui
  namespace: docker-registry-ui
  labels:
    app.kubernetes.io/name: docker-registry-ui
    app.kubernetes.io/version: "1.0"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: docker-registry-ui
      app.kubernetes.io/version: "1.0"
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: docker-registry-ui
        app.kubernetes.io/version: "1.0"
    spec:
      containers:
        - name: docker-registry-ui
          image: joxit/docker-registry-ui:latest
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: SINGLE_REGISTRY
              value: "true"
            - name: REGISTRY_TITLE
              value: "registry.${APPLICATIONS.GLOBAL.BASE_URL}"
            - name: DELETE_IMAGES
              value: "true"
            - name: SHOW_CONTENT_DIGEST
              value: "true"
            - name: NGINX_PROXY_PASS_URL
              value: "http://registry.${APPLICATIONS.GLOBAL.BASE_URL}:32000"
